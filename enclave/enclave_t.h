/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_ENCLAVE_T_H
#define EDGER8R_ENCLAVE_T_H

#include <openenclave/enclave.h>

#include "enclave_args.h"

OE_EXTERNC_BEGIN

/**** ECALL prototypes. ****/
void enclave_run(
    exec_result_struct* result,
    gs_struct* _gs,
    tx_struct* _tx,
    unsigned char* _caller,
    unsigned char* _callee,
    uint8_t* _input,
    size_t _input_size,
    unsigned char* _call_value);

void enclave_deploy(
    gs_struct* _gs,
    tx_struct* _tx,
    unsigned char* _caller,
    uint8_t* _constructor,
    size_t _constructor_size,
    unsigned char* contract_address);

/**** OCALL prototypes. ****/
oe_result_t push_ocall(
    uint64_t* pc,
    uint8_t bytes,
    uint8_t* code_arr,
    size_t code_size,
    unsigned char* res);

oe_result_t add_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t mul_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t sub_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t div_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t sdiv_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t mod_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t smod_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t addmod_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* m,
    unsigned char* res);

oe_result_t mulmod_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* m,
    unsigned char* res);

oe_result_t exp_ocall(
    unsigned char* b,
    unsigned char* e,
    unsigned char* res);

oe_result_t signextend_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t lt_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t gt_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t slt_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t eq_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t isZero_ocall(
    unsigned char* x,
    unsigned char* res);

oe_result_t and_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t or_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t xor_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t not_ocall(
    unsigned char* x,
    unsigned char* res);

oe_result_t byte_ocall(
    unsigned char* idx,
    unsigned char* val,
    unsigned char* res);

oe_result_t shl_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t shr_ocall(
    unsigned char* x,
    unsigned char* y,
    unsigned char* res);

oe_result_t mstore8_ocall(
    uint8_t* b,
    unsigned char* n);

oe_result_t calldataload_ocall(
    uint64_t offset,
    uint64_t sizeInput,
    uint8_t* input,
    size_t input_size,
    unsigned char* res);

oe_result_t blockhash_ocall(
    unsigned char* x,
    unsigned char* res);

oe_result_t sha3_ocall(
    uint8_t* h,
    unsigned char* res);

oe_result_t generate_address_ocall(
    unsigned char* sender,
    size_t nonce,
    unsigned char* newAddress);

oe_result_t to_big_endian_ocall(
    unsigned char* v,
    uint8_t* out,
    size_t out_size);

oe_result_t from_big_endian_ocall(
    uint8_t* begin,
    size_t size,
    size_t begin_size,
    unsigned char* res);

oe_result_t oe_sgx_get_cpuid_table_ocall(
    oe_result_t* _retval,
    void* cpuid_table_buffer,
    size_t cpuid_table_buffer_size);

OE_EXTERNC_END

#endif // EDGER8R_ENCLAVE_T_H
